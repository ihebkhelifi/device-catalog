let ewattch = require("../../ewattch_decode.js")
let ngsild = require("../../ngsi-ld.js")

function main() {
    var payload = process.argv[3];
    var time = process.argv[4];
    var entity_id = "urn:ngsi-ld:Device:" + process.argv[5];
    // ********* Test pattern (uncomment to test behaviour) ********************
    // console.log("data payload from an ambiance")
    // payload=([0x00, 0x06, 0x80, 0x00, 0x01, 0x01, 0x56, 0x52]);
    // payload=([0x00, 0x1B, 0x59, 0x20, 0x19, 0x05, 0x44, 0x70, 0x0D, 0x00, 0x00, 0x45, 0x01, 0xAA, 0x02, 0x00, 0x00, 0x1C, 0x5C, 0x8F, 0x0D, 0x43, 0x00, 0x4E, 0x11, 0x01, 0x01, 0x9C, 0x09]);
    // payload=([0x00, 0x06, 0x00, 0x3f, 0x09, 0x08, 0xdd, 0x04]);
    // payload=([0x00, 0x03, 0x14, 0x28, 0x00]);
    // payload=([0x00, 0x02, 0x04, 0x47]);
    // payload=([0x00, 0x03, 0x00, 0x3b, 0x09]);
    // payload=([0x00, 0x08, 0x04, 0x48, 0x14, 0x28, 0x00, 0x08, 0xcb, 0x04]);
    // payload=([0x00, 0x09, 0x00, 0x36, 0x09, 0x10, 0x22, 0x00, 0x08, 0xa7, 0x04]);
    // payload=([0x00, 0x0c, 0x00, 0x21, 0x09, 0x10, 0x22, 0x00, 0x14, 0x28, 0x00, 0x08, 0x1d, 0x04]);
    // payload=([0x00, 0x0e, 0x00, 0x21, 0x09, 0x04, 0x47, 0x10, 0x22, 0x00, 0x14, 0x28, 0x00, 0x08, 0x1d, 0x04]);

    //console.log("status payload from an ambiance")
    //payload=([0x10, 0x07, 0x00, 0x03, 0x02, 0x04, 0x01, 0x04, 0x07]);

    //console.log("status payload from a squid")
    // payload=([0x10, 0x0A, 0x00, 0x08, 0x02, 0x02, 0x01, 0x04, 0x08, 0x08, 0x3C, 0x00]);

    // console.log("data payload from a squid")
    // payload=([0x00, 0x25, 0x48, 0x13, 0x57, 0x1F, 0x2A, 0x72, 0x24, 0x47, 0x75, 0x12, 0xA1, 0xD1, 0x01, 0xD1, 0x00, 0x02, 0x82, 0x40, 0x00, 0xBC, 0x58, 0x00, 0xB5, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x84, 0x09, 0x00]);

    //console.log("data payload from a squid Pro")
    // payload=("002640c46effff6effff6effff6effff6effff6effff6e00006e00006e00006e00006e00006e0000");

    //console.log("data payload from a tyness with 3 current clamps configured to send energy plus IRMS current")
    // payload=([0x00, 0x14, 0x40, 0x32, 0x02, 0x02, 0x01, 0x04, 0x08, 0x08, 0x3C, 0x00, 0x25, 0x02, 0x02, 0x01, 0x04, 0x08, 0x08, 0x3C, 0x00, 0x25]);

    // Generate timestamps for tests - to be commented in operation
    // var time = new Date();
    // time.toISOString();

    // ********* End test pattern ***********************

    var decoded = ewattch.LoraWANEwattchDecoder(payload);
    var ngsild_payload = ngsild.ngsildWrapper(decoded, time, entity_id);

    // To get a more readable view of the NGSI-LD payload
    // console.log(ngsild_payload)

    process.stdout.write(JSON.stringify(ngsild_payload));
}

if (require.main === module) {
    main();
}
